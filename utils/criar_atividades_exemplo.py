#!/usr/bin/env python
"""
Script para criar atividades de exemplo e demonstrar o detalhamento edit√°vel
"""
import os
import sys
import django

# Configurar Django
sys.path.append('.')
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'project.settings')
django.setup()

from django.contrib.auth.models import User
from contact.models import (
    GrupoPreJovens, AulaCrianca, CirculoEstudo, ReuniaoDevocional,
    Rua, ConfiguracaoEstatisticas, EstatisticasEditaveis
)

def criar_dados_exemplo():
    # Criar ou obter usu√°rio
    user, created = User.objects.get_or_create(
        username='admin',
        defaults={
            'email': 'admin@example.com',
            'is_staff': True,
            'is_superuser': True
        }
    )
    if created:
        user.set_password('admin123')
        user.save()
        print(f"‚úÖ Usu√°rio criado: {user.username}")
    else:
        print(f"‚úÖ Usu√°rio encontrado: {user.username}")

    # Criar ruas de exemplo
    ruas_exemplo = [
        "Rua das Flores, 123",
        "Avenida Central, 456", 
        "Rua da Paz, 789",
        "Pra√ßa da Harmonia, 101",
        "Rua do Progresso, 202"
    ]
    
    ruas_criadas = []
    for nome_rua in ruas_exemplo:
        rua, created = Rua.objects.get_or_create(
            description=nome_rua,
            owner=user,
            defaults={'bairro': 'Centro'}
        )
        ruas_criadas.append(rua)
        if created:
            print(f"‚úÖ Rua criada: {nome_rua}")

    # Criar Grupos de Pr√©-jovens
    grupos_data = [
        {"nome": "Grupo Pr√©-jovens Norte", "livro": "Caminhando Juntos"},
        {"nome": "Grupo Pr√©-jovens Sul", "livro": "Pensamento Espiritual"},
        {"nome": "Grupo Pr√©-jovens Centro", "livro": "O Poder da Palavra"},
    ]
    
    for i, data in enumerate(grupos_data):
        grupo, created = GrupoPreJovens.objects.get_or_create(
            nome=data['nome'],
            owner=user,
            defaults={
                'rua': ruas_criadas[i % len(ruas_criadas)],
                'livro': data['livro'],
                'description': f'Grupo de pr√©-jovens na regi√£o {data["nome"].split()[-1]}',
                'show': True
            }
        )
        if created:
            print(f"‚úÖ Grupo de Pr√©-jovens criado: {data['nome']} - {data['livro']}")

    # Criar Aulas para Crian√ßas
    aulas_data = [
        {"nome": "Aula Crian√ßas Matutina", "serie": "S√©rie 1"},
        {"nome": "Aula Crian√ßas Vespertina", "serie": "S√©rie 2"},
        {"nome": "Aula Crian√ßas Especial", "serie": "S√©rie 3"},
    ]
    
    for i, data in enumerate(aulas_data):
        aula, created = AulaCrianca.objects.get_or_create(
            nome=data['nome'],
            owner=user,
            defaults={
                'rua': ruas_criadas[i % len(ruas_criadas)],
                'serie': data['serie'],
                'description': f'Aula para crian√ßas - {data["serie"]}',
                'show': True
            }
        )
        if created:
            print(f"‚úÖ Aula para Crian√ßas criada: {data['nome']} - {data['serie']}")

    # Criar C√≠rculos de Estudo
    circulos_data = [
        {"nome": "C√≠rculo Central", "livro": "Livro 1 - Reflex√µes sobre a Vida do Esp√≠rito"},
        {"nome": "C√≠rculo Comunit√°rio", "livro": "Livro 2 - Caminhando Juntos"},
        {"nome": "C√≠rculo Avan√ßado", "livro": "Livro 3 - Ensinando Classes para Crian√ßas"},
    ]
    
    for i, data in enumerate(circulos_data):
        circulo, created = CirculoEstudo.objects.get_or_create(
            nome=data['nome'],
            owner=user,
            defaults={
                'rua': ruas_criadas[i % len(ruas_criadas)],
                'livro': data['livro'],
                'description': f'C√≠rculo de estudo - {data["livro"]}',
                'show': True
            }
        )
        if created:
            print(f"‚úÖ C√≠rculo de Estudo criado: {data['nome']} - {data['livro']}")

    # Criar Reuni√µes Devocionais
    reunioes_data = [
        {"nome": "Reuni√£o Devocional Central", "frequencia": "Semanal"},
        {"nome": "Reuni√£o da Comunidade Norte", "frequencia": "Quinzenal"},
        {"nome": "Reuni√£o do Bairro Sul", "frequencia": "Semanal"},
    ]
    
    for i, data in enumerate(reunioes_data):
        reuniao, created = ReuniaoDevocional.objects.get_or_create(
            nome=data['nome'],
            owner=user,
            defaults={
                'rua': ruas_criadas[i % len(ruas_criadas)],
                'frequencia': data['frequencia'],
                'dia_semana': 'Domingo',
                'numero_participantes': 10 + i * 5,  # 10, 15, 20 participantes
                'ativa': True
            }
        )
        if created:
            print(f"‚úÖ Reuni√£o Devocional criada: {data['nome']} - {data['frequencia']}")

    # Criar configura√ß√£o de estat√≠sticas
    config, created = ConfiguracaoEstatisticas.objects.get_or_create(
        owner=user,
        defaults={
            'titulo_plano': 'Plano de Crescimento da Comunidade',
            'data_inicio_plano': '2024-01-01',
            'duracao_ciclo_meses': 3,
            'total_ciclos_plano': 36,
            'ativo': True
        }
    )
    if created:
        print(f"‚úÖ Configura√ß√£o de estat√≠sticas criada")

    print("\nüéâ Dados de exemplo criados com sucesso!")
    print("üìä Agora voc√™ pode ver o detalhamento das atividades na p√°gina de estat√≠sticas!")
    print("üîó Acesse: http://127.0.0.1:8000/estatisticas/editar/")
    
    # Resumo
    print(f"\nüìà Resumo dos dados criados:")
    print(f"üë• Grupos de Pr√©-jovens: {GrupoPreJovens.objects.filter(owner=user).count()}")
    print(f"üé® Aulas para Crian√ßas: {AulaCrianca.objects.filter(owner=user).count()}")
    print(f"üìö C√≠rculos de Estudo: {CirculoEstudo.objects.filter(owner=user).count()}")
    print(f"üïØÔ∏è Reuni√µes Devocionais: {ReuniaoDevocional.objects.filter(owner=user).count()}")

if __name__ == '__main__':
    criar_dados_exemplo()